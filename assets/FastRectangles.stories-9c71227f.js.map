{"version":3,"file":"FastRectangles.stories-9c71227f.js","sources":["../../node_modules/cubic-bezier/index.js","../../src/layout/createTransition.ts","../../src/layout/Dispatcher.ts","../../src/layout/RectanglesLayout.ts","../../node_modules/d3-color/src/define.js","../../node_modules/d3-color/src/color.js","../../src/webgl/rectangleVertexShader.glsl?raw","../../src/webgl/rectangleFragmentShader.glsl?raw","../../src/webgl/getShaders.ts","../../src/webgl/RectanglesWebGL.ts","../../src/react/FastRectangles.tsx"],"sourcesContent":["\nmodule.exports = function(x1, y1, x2, y2, epsilon){\n\n\tvar curveX = function(t){\n\t\tvar v = 1 - t;\n\t\treturn 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;\n\t};\n\n\tvar curveY = function(t){\n\t\tvar v = 1 - t;\n\t\treturn 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;\n\t};\n\n\tvar derivativeCurveX = function(t){\n\t\tvar v = 1 - t;\n\t\treturn 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (- t * t * t + 2 * v * t) * x2;\n\t};\n\n\treturn function(t){\n\n\t\tvar x = t, t0, t1, t2, x2, d2, i;\n\n\t\t// First try a few iterations of Newton's method -- normally very fast.\n\t\tfor (t2 = x, i = 0; i < 8; i++){\n\t\t\tx2 = curveX(t2) - x;\n\t\t\tif (Math.abs(x2) < epsilon) return curveY(t2);\n\t\t\td2 = derivativeCurveX(t2);\n\t\t\tif (Math.abs(d2) < 1e-6) break;\n\t\t\tt2 = t2 - x2 / d2;\n\t\t}\n\n\t\tt0 = 0, t1 = 1, t2 = x;\n\n\t\tif (t2 < t0) return curveY(t0);\n\t\tif (t2 > t1) return curveY(t1);\n\n\t\t// Fallback to the bisection method for reliability.\n\t\twhile (t0 < t1){\n\t\t\tx2 = curveX(t2);\n\t\t\tif (Math.abs(x2 - x) < epsilon) return curveY(t2);\n\t\t\tif (x > x2) t0 = t2;\n\t\t\telse t1 = t2;\n\t\t\tt2 = (t1 - t0) * .5 + t0;\n\t\t}\n\n\t\t// Failure\n\t\treturn curveY(t2);\n\n\t};\n\n};\n","import cubicBezier from 'cubic-bezier'\nconst epsilon = 0.02\n\nconst bez = cubicBezier(0.42, 0, 0.58, 1, epsilon)\n\ntype Args = {\n  startValue: number\n  endValue: number\n  setter: (value: number) => void\n  onEnd?: () => void\n  duration?: number\n  ease?: (normalizedTime: number) => number\n  delay?: number\n}\n\nexport default function createTransition ({\n  startValue,\n  endValue,\n  setter,\n  onEnd,\n  duration = 600,\n  ease = bez,\n  delay = 0\n} : Args) {\n  let t = 0\n  let lastTick = new Date().getTime()\n  const tToValue = (t : number) => {\n    if (t < delay) {\n      return startValue\n    }\n    const d = endValue - startValue\n    return startValue + d * ease((t - delay) / duration)\n  }\n\n  const tick = () => {\n    const now = new Date().getTime()\n    const delta = now - lastTick\n    lastTick = now\n    t += delta\n    t = Math.min(duration + delay, t)\n    setter(tToValue(t))\n    if (t >= duration + delay) {\n      if (onEnd) {\n        onEnd()\n      }\n    }\n  }\n\n  return { tick }\n}\n","/*\nVery simple synchronous event dispatcher\n*/\n\ntype Handler = () => void\n\nexport default class Dispatcher {\n  private handlers : Handler[] = []\n\n  addHandler (handler: Handler) {\n    this.handlers.push(handler)\n  }\n\n  dispatch () {\n    for (const handler of this.handlers) {\n      handler()\n    }\n  }\n}","import createTransition from './createTransition'\nimport Dispatcher from './Dispatcher'\n// import Stats from 'stats.js'\nimport type { Rectangle } from './layoutTypes'\n\n// const stats = new Stats()\n// stats.showPanel( 0 )\n// document.body.appendChild( stats.dom )\n\ntype Rectangles = Rectangle[] | Record<string, Rectangle>\n\nexport default class RectanglesLayout {\n  fill: string\n  stroke: string\n  hoverFill?: string\n  hoverStroke?: string\n  xScale: number\n  yScale: number\n  xStart = 0\n  yStart = 0\n  /* \n    xSpacing = pixels subtracted from the width of \n    each rectangle after scaling\n  */\n  xSpacing = 0 \n  width: number\n  height: number\n  size = 0\n  positions: Float32Array = new Float32Array(0)\n  dimensions: Float32Array = new Float32Array(0)\n  depths: Float32Array = new Float32Array(0)\n  \n  startPositions: Float32Array = new Float32Array(0)\n  startDimensions: Float32Array = new Float32Array(0)\n\n  positionDeltas: Float32Array = new Float32Array(0)\n  dimensionDeltas: Float32Array = new Float32Array(0)\n\n  scaleTransition?: ReturnType<typeof createTransition>\n  rectanglesTransition?: ReturnType<typeof createTransition>\n\n  selection: Float32Array = new Float32Array(0)\n  mouseOverKey?: string\n\n  private _onRectanglesChange = new Dispatcher()\n  private _onScaleChange = new Dispatcher()\n  private _onColourChange = new Dispatcher()\n\n  private _keys: string[] = [] \n  private _indexByKey: Map<string, number> = new Map\n\n  constructor (\n    width : number, \n    height: number, \n    xScale = 1, \n    yScale = 1,\n    fill: string,\n    stroke: string,\n    hoverFill?: string,\n    hoverStroke?: string,\n    xSpacing = 0\n  ) {\n    this.width = width\n    this.height = height\n    this.xScale = xScale\n    this.yScale = yScale\n    this.fill = fill\n    this.stroke = stroke\n    this.hoverFill = hoverFill\n    this.hoverStroke = hoverStroke\n    this.xSpacing = xSpacing\n    this.tick = this.tick.bind(this)\n  }\n\n  public onRectanglesChange (handler) {\n    this._onRectanglesChange.addHandler(handler)\n  }\n\n  public onScaleChange (handler) {\n    this._onScaleChange.addHandler(handler)\n  }\n\n  public onColourChange (handler) {\n    this._onColourChange.addHandler(handler)\n  }\n\n  setRectangles (rectangles: Rectangles) {\n    const isArray = Array.isArray(rectangles)\n    const size = this.size = isArray \n      ? rectangles.length \n      : Object.keys(rectangles).length\n    const positions = this.positions = new Float32Array(size * 2)\n    const dimensions = this.dimensions = new Float32Array(size * 2)\n\n    this.startPositions = new Float32Array(size * 2)\n    this.startDimensions = new Float32Array(size * 2)\n    this.positionDeltas = new Float32Array(size * 2)\n    this.dimensionDeltas = new Float32Array(size * 2)\n\n    this.depths = new Float32Array(size)\n    if (this.selection.length !== size) {\n      this.selection = new Float32Array(size)\n    }\n\n    if (isArray) {\n      rectangles.forEach((r, i) => {\n        positions[i*2] = r.left\n        positions[i*2+1] = this.height - r.top - r.height\n        dimensions[i*2] = r.width\n        dimensions[i*2+1] = r.height\n      })\n    } else {\n      const keys = this._keys = Object.keys(rectangles)\n      const indexByKey = this._indexByKey = new Map\n   \n      keys.forEach((k, i) => {\n        indexByKey.set(k, i)\n        const r = rectangles[k]\n        positions[i*2] = r.left\n        positions[i*2+1] = this.height - r.top - r.height\n        dimensions[i*2] = r.width\n        dimensions[i*2+1] = r.height\n      })\n    }\n    this._onRectanglesChange.dispatch()\n  }\n\n  tick () {\n    // stats.begin()\n    if (this.rectanglesTransition || this.scaleTransition) {\n      this.rectanglesTransition?.tick()\n      this.scaleTransition?.tick()\n      window.requestAnimationFrame(this.tick)\n    }\n    // stats.end()\n  }\n\n  handleMouseOver (key?: string) {\n    if (key === undefined && this.mouseOverKey) {\n      this.selection[this._indexByKey.get(this.mouseOverKey)!] = 0\n      this.mouseOverKey = undefined\n      this._onRectanglesChange.dispatch()\n      return\n    }\n    \n    const index = this._indexByKey.get(key!)!\n    if (key === this.mouseOverKey) {\n      return\n    }\n    if (this.mouseOverKey) {\n      this.selection[this._indexByKey.get(this.mouseOverKey)!] = 0\n    }\n    this.mouseOverKey = key\n    if (index >= 0) {\n      this.selection[index] = 1\n    }\n    this._onRectanglesChange.dispatch()\n  }\n\n  private _updateFromArray(rectangles: Rectangle[]) : boolean {\n    // if the first time being called, just set them directly\n    if (this.positions.length !== rectangles.length * 2) {\n      this.setRectangles(rectangles)\n      return false\n    }\n\n    this.startPositions.set(this.positions)\n    this.startDimensions.set(this.dimensions)\n    rectangles.forEach((r, i) => {\n      this.positionDeltas[i*2] = r.left - this.positions[i*2]\n      this.positionDeltas[i*2+1] = \n        (this.height - r.top - r.height) - this.positions[i*2+1]\n      this.dimensionDeltas[i*2] = r.width - this.dimensions[i*2]\n      this.dimensionDeltas[i*2+1] = r.height - this.dimensions[i*2+1]\n    })\n\n    return true\n  }\n\n  private _updateFromObject(rectangles: Record<string, Rectangle>) : boolean {\n    const newKeys = Object.keys(rectangles)\n    const newKeyLength = newKeys.length\n    const update : string[] = []\n\n    const keyChecklist = new Map\n    this._indexByKey.forEach((value, key) => {\n      keyChecklist.set(key, null)\n    })\n\n    // now iterate the new keys, populating enter when\n    // a new key is found, and deleting as we see\n    // keys we already know\n    const enter : string[] = []\n    for (let i=0; i<newKeyLength; i++) {\n      const key = newKeys[i]\n      if (keyChecklist.has(key)) {\n        update.push(key)\n        keyChecklist.delete(key)\n      } else {\n        enter.push(key)\n      }\n    }\n\n    // if any keys are left in the keyChecklist after this process,\n    // it means they were not present in the new list of keys\n    // and so should be removed. In this case, we rebuild all\n    // the arrays rather than trying to shuffle data around\n    if (keyChecklist.size || enter.length) {\n      const newIndexByKey = new Map\n      const size = this.size = newKeyLength\n      const positions  = new Float32Array(size * 2)\n      const dimensions  = new Float32Array(size * 2)\n\n      const startPositions = this.startPositions = new Float32Array(size * 2)\n      const startDimensions = this.startDimensions = new Float32Array(size * 2)\n      const positionDeltas = this.positionDeltas = new Float32Array(size * 2)\n      const dimensionDeltas = this.dimensionDeltas = new Float32Array(size * 2)\n      this.depths = new Float32Array(size)\n\n      const selection = new Float32Array(size)\n\n      // i tracks the index in the newly created arrays\n      let i = 0\n\n      // first we fill it with the updates\n      for (const key of update) {\n        // j is the old index\n        const j = this._indexByKey.get(key)!\n\n        const ix = i*2\n        const iy = i*2 + 1\n        const jx = j*2\n        const jy = j*2 + 1\n\n        startPositions[ix] = positions[ix] = this.positions[jx]\n        startPositions[iy] = positions[iy] = this.positions[jy]\n        startDimensions[ix] = dimensions[ix] = this.dimensions[jx]\n        startDimensions[iy] = dimensions[iy] = this.dimensions[jy]\n        \n        const r = rectangles[key]\n\n        positionDeltas[ix] = r.left - this.positions[jx]\n        positionDeltas[iy] = \n          (this.height - r.top - r.height) - this.positions[jy]\n        dimensionDeltas[i*2] = r.width - this.dimensions[jx]\n        dimensionDeltas[i*2+1] = r.height - this.dimensions[jy]\n\n        newIndexByKey.set(key, i)\n\n        selection[i] = this.selection[j]\n\n        i++\n      }\n\n      for (const key of enter) {\n        const ix = i*2\n        const iy = i*2 + 1\n        \n        const r = rectangles[key]\n\n        startPositions[ix] = positions[ix] = r.left\n        startPositions[iy] = positions[iy] = this.height - r.top - r.height\n        startDimensions[ix] = dimensions[ix] = r.width\n        startDimensions[iy] = dimensions[iy] = r.height\n\n        // for new rectangles, they enter at their position and\n        // there are no deltas. They should already be at zero\n        newIndexByKey.set(key, i)\n\n        i++\n      }\n\n      this.positions = positions\n      this.dimensions = dimensions\n      this.selection = selection\n\n      this._indexByKey = newIndexByKey\n      this._keys = newKeys\n    } else {\n      this.startPositions.set(this.positions)\n      this.startDimensions.set(this.dimensions)\n\n      // if the set of keys didn't change, then just do the updates\n      for (const [key, r] of Object.entries(rectangles)) {\n        const j = this._indexByKey.get(key)!\n        const jx = j*2\n        const jy = j*2 + 1\n\n        this.positionDeltas[jx] = r.left - this.positions[jx]\n        this.positionDeltas[jy] = \n          (this.height - r.top - r.height) - this.positions[jy]\n        this.dimensionDeltas[jx] = r.width - this.dimensions[jx]\n        this.dimensionDeltas[jy] = r.height - this.dimensions[jy]\n      }\n    }\n\n    return true\n  }\n\n  transitionToRectangles (rectangles: Rectangles, duration = 600) {\n    if (!duration || duration === 0) {\n      this.setRectangles(rectangles)\n      return\n    }\n\n    let doTransition\n\n    if (Array.isArray(rectangles)) {\n      doTransition = this._updateFromArray(rectangles)\n    } else {\n      doTransition = this._updateFromObject(rectangles)\n    }\n\n    if (!doTransition) return\n    \n    this.rectanglesTransition = createTransition({\n      startValue: 0,\n      endValue: 1,\n      duration,\n      setter: (value) => {\n        for (let i=0; i<this.positions.length; i++) {\n          this.positions[i] = \n            this.startPositions[i] + (this.positionDeltas[i] * value)\n          this.dimensions[i] = \n            this.startDimensions[i] + (this.dimensionDeltas[i] * value)\n        }\n        this._onRectanglesChange.dispatch()\n      },\n      onEnd: () => {\n        delete this.rectanglesTransition\n      }\n    })\n\n    // console.log('first fast rectangles tick called')\n    this.tick()\n  }\n\n  _scaleHasChanged (\n    xScale: number, \n    yScale: number, \n    xStart: number, \n    yStart: number\n  ) {\n    return xScale !== this.xScale || \n           yScale !== this.yScale || \n           xStart !== this.xStart || \n           yStart !== this.yStart\n  }\n\n  setScale (xScale: number, yScale: number, xStart: number, yStart: number) {\n    if (this._scaleHasChanged(xScale, yScale, xStart, yStart)) {\n      this.xScale = xScale\n      this.yScale = yScale\n      this.xStart = xStart\n      this.yStart = yStart\n      this._onScaleChange.dispatch()\n    }\n  }\n\n  setColours (\n    fill: string, \n    stroke: string, \n    hoverFill: string, \n    hoverStroke: string\n  ) {\n    this.fill = fill\n    this.stroke = stroke\n    this.hoverFill = hoverFill\n    this.hoverStroke = hoverStroke\n    this._onColourChange.dispatch()\n  }\n\n  transitionToScale (\n    xScale: number, \n    yScale: number, \n    xStart: number, \n    yStart: number, \n    duration\n  ) {\n    if (!duration || duration === 0) {\n      this.setScale(\n        xScale,\n        yScale,\n        xStart,\n        yStart\n      )\n      return\n    }\n    if (!this._scaleHasChanged(xScale, yScale, xStart, yStart)) {\n      return\n    }\n    const start = {\n      xScale: this.xScale,\n      yScale: this.yScale,\n      xStart: this.xStart,\n      yStart: this.yStart\n    }\n    const end = {\n      xScale,\n      yScale,\n      xStart,\n      yStart\n    }\n\n    const interpolate = (start, end, value) => start + (end - start) * value\n\n    this.scaleTransition = createTransition({\n      startValue: 0,\n      endValue: 1,\n      duration,\n      setter: (value) => {\n        this.setScale(\n          interpolate(start.xScale, end.xScale, value),\n          interpolate(start.yScale, end.yScale, value),\n          interpolate(start.xStart, end.xStart, value),\n          interpolate(start.yStart, end.yStart, value)\n        )\n      },\n      onEnd: () => {\n        delete this.scaleTransition\n      }\n    })\n    this.tick()\n  }\n\n  keyForIndex(index: number) {\n    return this._keys[index]\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default \"uniform vec2 u_canvasDimensions;\\r\\nuniform mediump vec4 u_scaling;\\r\\n\\r\\nattribute vec4 a_position;\\r\\nattribute vec4 a_texcoord;\\r\\nattribute float a_index;\\r\\nattribute float a_selection;\\r\\n\\r\\nvarying vec4 v_position;\\r\\nvarying vec4 v_texcoord;\\r\\nvarying vec3 v_colour;\\r\\nvarying float v_selection;\\r\\n\\r\\nvec3 encodeObject(float id) {\\r\\n   id += 1.0;\\r\\n   int b = int(mod(id, 255.0));\\r\\n   int r = int(id) / 255 / 255;\\r\\n   int g = (int(id) - b - r * 255 * 255) / 255;\\r\\n   return vec3(r, g, b) / 255.0;\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n   gl_Position = vec4(\\r\\n      (u_scaling.x * (a_position.x - u_scaling.z) - a_position.w) / (u_canvasDimensions.x / 2.0) - 1.0,\\r\\n      u_scaling.y * (a_position.y - u_scaling.w) / (u_canvasDimensions.y / 2.0) - 1.0,\\r\\n      a_position.z,\\r\\n      1.0\\r\\n   );\\r\\n   v_texcoord = a_texcoord;\\r\\n   v_colour = encodeObject(a_index);\\r\\n   v_selection = a_selection;\\r\\n}\"","export default \"precision mediump float;\\r\\n\\r\\nuniform float u_renderType; // colours or rectangle ids\\r\\nuniform mediump vec4 u_scaling;\\r\\nuniform vec4 u_fill;\\r\\nuniform vec4 u_stroke;\\r\\nuniform vec4 u_hover_fill;\\r\\nuniform vec4 u_hover_stroke;\\r\\n\\r\\n// Passed in from the vertex shader.\\r\\nvarying vec4 v_texcoord;\\r\\nvarying vec3 v_colour;\\r\\nvarying float v_selection;\\r\\n\\r\\nvoid main() {\\r\\n  // renderType == 1 means id map (one colour per rectangle)\\r\\n  if (u_renderType == 1.0) {\\r\\n    gl_FragColor.rgb = v_colour;  //= vec4(0.0, 0.0, 0.0, 1.0);\\r\\n    gl_FragColor.a = 1.0;\\r\\n  } else {\\r\\n    float xBorderWidth = 1.0 / v_texcoord.z / u_scaling.x;\\r\\n    float yBorderWidth = 1.0 / v_texcoord.w / u_scaling.y;\\r\\n\\r\\n    float minX = xBorderWidth;\\r\\n    float maxX = 1.0 - xBorderWidth;\\r\\n    float minY = yBorderWidth;\\r\\n    float maxY = 1.0 - yBorderWidth;\\r\\n\\r\\n    if (\\r\\n      v_texcoord.y > minY && \\r\\n      v_texcoord.x > minX && \\r\\n      v_texcoord.y < maxY && \\r\\n      v_texcoord.x < maxX\\r\\n    ) {\\r\\n      if (v_selection == 1.0) { // i.e. hover\\r\\n        gl_FragColor = u_hover_fill;\\r\\n      } else {\\r\\n        gl_FragColor = u_fill;\\r\\n      }\\r\\n    } else {\\r\\n      if (v_selection == 1.0) { // i.e. hover\\r\\n        gl_FragColor = u_hover_stroke;\\r\\n      } else {\\r\\n        gl_FragColor = u_stroke;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\"","import vertexShaderText from './rectangleVertexShader.glsl?raw'\nimport fragmentShaderText from './rectangleFragmentShader.glsl?raw'\n\nfunction createShader (\n  gl: WebGLRenderingContext, \n  type: number, \n  text: string\n) {\n  const shader = gl.createShader(type) // create shader\n  if (!shader) {\n    throw new Error('Shader creation failed!')\n  }\n  gl.shaderSource(shader, text) // set the source\n  gl.compileShader(shader) // compile\n  // check that it compiled correctly\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(\n      'An error occurred compiling the shaders' + gl.getShaderInfoLog(shader)\n    )\n  }\n  return shader\n}\n\nexport default function getShaders (gl: WebGLRenderingContext) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderText)\n  const fragmentShader = createShader(\n    gl, gl.FRAGMENT_SHADER, fragmentShaderText\n  )\n  return { vertexShader, fragmentShader }\n}\n","import { rgb } from 'd3-color'\n\nimport RectanglesLayout from '../layout/RectanglesLayout'\nimport getShaders from './getShaders'\n\ntype LocationAndBuffer = {\n  location: number\n  buffer: WebGLBuffer\n}\n\nfunction createProgram (\n  gl: WebGLRenderingContext, \n  shaders: WebGLShader[]\n) {\n  const shaderProgram = gl.createProgram()\n  if (!shaderProgram) {\n    throw new Error('Failed to create program')\n  }\n  for (const shader of shaders) {\n    gl.attachShader(shaderProgram, shader)\n  }\n  gl.linkProgram(shaderProgram)\n  return shaderProgram\n}\n\nfunction createBufferAndLocation (\n  gl: WebGLRenderingContext, \n  program: WebGLProgram, \n  name: string\n) : LocationAndBuffer {\n  const location = gl.getAttribLocation(program, name)\n\n  if (location === -1) {\n    throw new Error('Location -1 error when trying to get attribute:' + name)\n  }\n\n  const buffer = gl.createBuffer()\n  if (!buffer) {\n    throw new Error('Failed to create webgl buffer:' + name)\n  }\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n  return {\n    location,\n    buffer\n  }\n}\n\nfunction populateBuffer (\n  gl: WebGLRenderingContext,\n  locationAndBuffer: LocationAndBuffer,\n  contents: Float32Array,\n  size: number\n) {\n  const { location, buffer } = locationAndBuffer\n\n  gl.enableVertexAttribArray(location)\n  gl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0)\n\n  gl.bufferData(gl.ARRAY_BUFFER, contents, gl.STATIC_DRAW)\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n}\n\nconst xScale = 1\nconst yScale = 1\n\nexport default class RectanglesWebGL {\n  _canvas: HTMLCanvasElement\n  _layout: RectanglesLayout\n  _canvasDimensionsLocation: WebGLUniformLocation\n  _scalingLocation: WebGLUniformLocation\n  _renderTypeLocation: WebGLUniformLocation\n  _fillLocation: WebGLUniformLocation\n  _strokeLocation: WebGLUniformLocation\n  _hoverFillLocation: WebGLUniformLocation\n  _hoverStrokeLocation: WebGLUniformLocation\n  _gl: WebGLRenderingContext\n  _program: WebGLProgram\n  _position: LocationAndBuffer\n  _texcoord: LocationAndBuffer\n  _indices: LocationAndBuffer\n  _selection: LocationAndBuffer\n  _numberOfTriangles = 0\n\n  /* the mouse detection version is only updated when needed */\n  _needsUpdate = false \n\n  constructor (\n    canvas: HTMLCanvasElement, \n    layout: RectanglesLayout,\n    mouseDetection = false\n  ) {\n    this._canvas = canvas\n    this._layout = layout\n    const gl = this._canvas.getContext(\n      'webgl', \n      { preserveDrawingBuffer: true, antialias: false }\n    ) \n    // const gl = this._canvas.getContext('webgl') \n    if (!gl) {\n      throw new Error('Unable to create webgl rendering context!')\n    }\n    \n    this._gl = gl\n\n    gl.enable(gl.DEPTH_TEST)\n    const { vertexShader, fragmentShader } = getShaders(gl)\n    const program = this._program = createProgram(\n      gl, \n      [vertexShader, fragmentShader]\n    )\n    gl.useProgram(program)\n\n    this._position = createBufferAndLocation(gl, program, 'a_position')\n    this._texcoord = createBufferAndLocation(gl, program, 'a_texcoord')\n    this._indices = createBufferAndLocation(gl, program, 'a_index')\n    this._selection = createBufferAndLocation(gl, program, 'a_selection')\n    this._canvasDimensionsLocation = gl.getUniformLocation(\n      program, \n      'u_canvasDimensions'\n    )\n    this._scalingLocation = gl.getUniformLocation(program, 'u_scaling')\n    this._gl.uniform2f(\n      this._canvasDimensionsLocation, \n      canvas.clientWidth, \n      canvas.clientHeight\n    )\n    this._setScaling()\n    this._renderTypeLocation = gl.getUniformLocation(program, 'u_renderType')\n    this._fillLocation = gl.getUniformLocation(program, 'u_fill')\n    this._strokeLocation = gl.getUniformLocation(program, 'u_stroke')\n    this._hoverFillLocation = gl.getUniformLocation(program, 'u_hover_fill')\n    this._hoverStrokeLocation = gl.getUniformLocation(\n      program, 'u_hover_stroke'\n    )\n\n    this._gl.uniform1f(this._renderTypeLocation, mouseDetection ? 1 : 0)\n\n    const w = window as any\n    w.rectGl = this\n\n    layout.onRectanglesChange(() => {\n      this._populateBuffers()\n      this._draw()\n    })\n\n    layout.onScaleChange(() => {\n      this._setScaling()\n      this._draw()\n    })\n\n    layout.onColourChange(() => {\n      this._setColours()\n      this._draw()\n    })\n  }\n  \n  private _setColours () {\n    const fill = rgb(this._layout.fill)\n    const stroke = rgb(this._layout.stroke)\n    const hoverFill = this._layout.hoverFill \n      ? rgb(this._layout.hoverFill) \n      : fill\n    const hoverStroke = this._layout.hoverStroke \n      ? rgb(this._layout.hoverStroke) \n      : stroke\n\n    this._gl.uniform4f(\n      this._fillLocation, \n      fill.r/255, \n      fill.g/255, \n      fill.b/255, \n      fill.opacity\n    )\n    this._gl.uniform4f(\n      this._strokeLocation, \n      stroke.r/255, \n      stroke.g/255, \n      stroke.b/255, \n      stroke.opacity\n    )\n    this._gl.uniform4f(\n      this._hoverFillLocation, \n      hoverFill.r/255, \n      hoverFill.g/255, \n      hoverFill.b/255, \n      hoverFill.opacity\n    )\n    this._gl.uniform4f(\n      this._hoverStrokeLocation,\n      hoverStroke.r/255,\n      hoverStroke.g/255,\n      hoverStroke.b/255,\n      hoverStroke.opacity\n    )\n  }\n\n  private _setScaling () {\n    if (this._layout && this._scalingLocation) {\n      this._gl.uniform4f(\n        this._scalingLocation,\n        this._layout.xScale,\n        this._layout.yScale,\n        this._layout.xStart,\n        this._layout.yStart  \n      )\n    }\n  }\n\n  private _populatePositionBuffer (\n    positions: Float32Array,\n    dimensions: Float32Array,\n    depths: Float32Array, \n    // visibles: Float32Array\n  ) {\n    const gl = this._gl\n    const vertices = new Float32Array(positions.length / 2 * 6 * 4)\n\n    let j = 0\n    for (let i = 0; i < depths.length; i++) {\n      // const rotation = 0\n      let [x, y] = positions.slice(i * 2, i * 2 + 2)\n      x *= xScale\n      y *= yScale\n\n      let [width, height] = dimensions.slice(i *2, i * 2 + 2)\n      width *= xScale\n      height *= yScale\n\n      const depth = depths[i]\n\n      /*\n\n  The coordinates are those of two triangles, arranged\n  in the following way, where the numbers are the indices\n  of the x, y pairs\n\n          3  5 _____  4\n          |\\   \\    |\n          | \\   \\   |\n          |  \\   \\  |\n          |   \\   \\ |\n          |____\\   \\|\n          1     2    6\n\n      */\n\n      const xr = x + width // x co-ord of right\n      const yt = y + height // y co-ord of top\n\n      // the w component is used as a binary\n      // to indicate for each vertex if it's on the right\n      // hand side of the rectangle, and therefore\n      // subject to being moved for rectangle spacing\n\n      const xSpacing = this._layout.xSpacing\n\n      const a = [\n        x,  // 1x\n        y,  // 1y\n        depth,\n        0,\n        xr, // 2x\n        y,  // 2y\n        depth,\n        xSpacing,\n        x,  // 3x\n        yt, // 3y\n        depth,\n        0,\n\n        xr, // 4x\n        yt, // 4y\n        depth,\n        xSpacing,\n\n        x,  // 5x\n        yt, // 5y\n        depth,\n        0,\n\n        xr, // 6x\n        y,  // 6y\n        depth,\n        xSpacing\n      ]\n\n      vertices.set(a, j)\n      j += 24\n    }\n\n    // const w = window as any\n    // w.vertices = vertices\n    // Turn on the position attribute and populate the position buffer\n\n    populateBuffer(gl, this._position, vertices, 4)\n    return vertices.length / 4\n  }\n\n  private _populateTexcoordsBuffer (dimensions: Float32Array) {\n    const size = dimensions.length / 2\n    const gl = this._gl\n    const coords = new Float32Array(size * 24)\n\n    let j = 0\n\n    for (let i = 0; i < size; i++) {\n      const [w, h] = dimensions.slice(i*2, i*2+2)\n      const a = [\n        0.0, 0.0, w, h,\n        1.0, 0.0, w, h,\n        0.0, 1.0, w, h,\n        1.0, 1.0, w, h,\n        0.0, 1.0, w, h,\n        1.0, 0.0, w, h\n      ]\n      coords.set(a, j)\n      j += 24\n    }\n\n    populateBuffer(gl, this._texcoord, coords, 4)\n  }\n\n  private _populateIndicesBuffer (size: number) {\n    const gl = this._gl\n    const indices = new Float32Array(size * 6)\n    let j = 0\n    for (let i = 0; i < size; i++) {\n      const a = [i, i, i, i, i, i]\n      indices.set(a, j)\n      j += 6\n    }\n    populateBuffer(gl, this._indices, indices, 1)\n  }\n\n  private _populateSelectionBuffer (selectionStates: Float32Array) {\n    const gl = this._gl\n    const size = selectionStates.length\n    const selection = new Float32Array(size * 6)\n    let j = 0\n    for (let i = 0; i < size; i++) {\n      const s = selectionStates[i]\n      const a = [s, s, s, s, s, s]\n      selection.set(a, j)\n      j += 6\n    }\n    populateBuffer(gl, this._selection, selection, 1)\n  }\n\n  /* this method should be called after height and/or width of the notesLayout\n  are updated, and handles the resizing of the canvas */\n  // resize () {\n  //   this._setCanvasSize()\n  //   const gl = this._gl\n  //   gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n  //   this._setProjectionMatrix(gl, this._program)\n  // }\n\n  private _populateBuffers () {\n    const layout = this._layout\n\n    if (!layout.positions || !layout.dimensions || !layout.depths) {\n      return\n    }\n\n    this._numberOfTriangles = this._populatePositionBuffer(\n      layout.positions,\n      layout.dimensions,\n      layout.depths\n    )\n    this._populateTexcoordsBuffer(layout.dimensions)\n    this._populateIndicesBuffer(layout.size)\n    this._populateSelectionBuffer(layout.selection)\n  }\n\n  private _draw() {\n    const gl = this._gl\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    gl.drawArrays(gl.TRIANGLES, 0, this._numberOfTriangles)\n  }\n\n  remove () {\n    this._canvas.remove()\n  }\n\n  colourAtPixel (x: number, y: number) {\n    const gl = this._gl\n    const colour = new Uint8Array(4)\n    gl.readPixels(\n      x,\n      y,\n      1,\n      1,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      colour\n    )\n    return colour\n  }\n\n  keyAtPixel (x:number, y:number) {\n    const colour = this.colourAtPixel(x, y)\n    const id = (colour[2]  + colour[1] * 255 + colour[0] * 255 * 255) - 1\n    return this._layout.keyForIndex(id)\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nimport RectanglesLayout from '../layout/RectanglesLayout'\nimport RectanglesWebGL from '../webgl/RectanglesWebGL'\nimport type { Rectangles } from '../layout/layoutTypes'\n\ninterface Props {\n  fill?: string\n  stroke?: string\n  hoverFill?: string\n  hoverStroke?: string\n  width: number\n  height: number\n  xScale?: number\n  yScale?: number\n  xStart?: number\n  yStart?: number\n  xSpacing?: number\n  transitionDuration?: number\n  rectangles: Rectangles\n}\n\nconst FastRectangles = ({\n  fill = 'gray',\n  stroke = 'black',\n  hoverFill,\n  hoverStroke,\n  width,\n  height,\n  rectangles,\n  xScale = 1,\n  yScale = 1,\n  xStart = 0,\n  yStart = 0,\n  xSpacing = 0,\n  transitionDuration\n}: Props) => {\n  const main = useRef<HTMLCanvasElement>(null)\n  const mouseDetectionCanvas = useRef<HTMLCanvasElement>(null)\n  const layout = useRef<RectanglesLayout | undefined>()\n  const rectanglesWebGL = useRef<RectanglesWebGL | undefined>()\n  const mouseDetectionWebGL = useRef<RectanglesWebGL | undefined>()\n\n  // initialise webgl component, connected to the canvas and the layout\n  useEffect(() => {\n    if (!main.current || !mouseDetectionCanvas.current) {\n      return\n    }\n    if (layout.current && rectanglesWebGL.current) {\n      return\n    }\n    layout.current = new RectanglesLayout(\n      width, height, xScale, yScale, \n      fill, stroke, hoverFill, hoverStroke,\n      xSpacing\n    )\n    rectanglesWebGL.current = new RectanglesWebGL(main.current, layout.current)\n    mouseDetectionWebGL.current = new RectanglesWebGL(\n      mouseDetectionCanvas.current, layout.current, true\n    )\n  }, [main.current, mouseDetectionCanvas.current])\n\n  // pass rectangles changes to the layout component\n  useEffect(() => {\n    if (!rectanglesWebGL.current) {\n      return\n    }\n    layout.current?.transitionToRectangles(rectangles, transitionDuration)\n  }, [rectangles, width, height])\n\n  // pass scale changes to the layout component\n  useEffect(() => {\n    if (!rectanglesWebGL.current) {\n      return\n    }\n    layout.current?.transitionToScale(\n      xScale, yScale, xStart, yStart, \n      transitionDuration\n    )\n  }, [xScale, yScale, xStart, yStart])\n\n  useEffect(() => {\n    if (!layout.current) {\n      return\n    }\n    layout.current.setColours(\n      fill, stroke, hoverFill, hoverStroke\n    )\n  }, [fill, stroke, hoverFill, hoverStroke])\n\n  const canvasWidth = width * window.devicePixelRatio\n  const canvasHeight = height * window.devicePixelRatio\n\n  return (\n    <>\n      <div style={{ width, height }}>\n        <div style={{position: 'absolute'}}>\n          <canvas\n            ref={main}\n            width={canvasWidth}\n            height={canvasHeight}\n            onMouseMove={(e) => {\n              const rect = (e.target as HTMLCanvasElement)\n                .getBoundingClientRect()\n              const x = (e.pageX - rect.left) * window.devicePixelRatio\n              const y = (rect.height - (e.pageY - rect.top)) \n                * window.devicePixelRatio\n              const key = mouseDetectionWebGL.current?.keyAtPixel(x, y)\n              layout.current?.handleMouseOver(key)\n            }}\n            style={{\n              width,\n              height,\n              backgroundColor: 'transparent',\n              position: 'absolute'\n            }}\n          />\n          <canvas\n            ref={mouseDetectionCanvas}\n            width={canvasWidth}\n            height={canvasHeight}\n            style={{\n              width,\n              height,\n              visibility: 'hidden',\n              position: 'absolute'\n            }}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default FastRectangles"],"names":["cubicBezier","x1","y1","x2","y2","epsilon","curveX","t","v","curveY","derivativeCurveX","x","t0","t1","t2","d2","i","bez","createTransition","startValue","endValue","setter","onEnd","duration","ease","delay","lastTick","tToValue","d","now","delta","Dispatcher","__publicField","handler","RectanglesLayout","width","height","xScale","yScale","fill","stroke","hoverFill","hoverStroke","xSpacing","rectangles","isArray","size","positions","dimensions","r","keys","indexByKey","k","_a","_b","key","index","newKeys","newKeyLength","update","keyChecklist","value","enter","newIndexByKey","startPositions","startDimensions","positionDeltas","dimensionDeltas","selection","j","ix","iy","jx","jy","doTransition","xStart","yStart","start","end","interpolate","define","constructor","factory","prototype","extend","parent","definition","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","color","channels","color_formatHex","color_formatHex8","color_formatHsl","color_formatRgb","hslConvert","format","m","l","rgbn","Rgb","rgba","hsla","n","g","b","a","rgbConvert","o","rgb","opacity","clampi","clampa","rgb_formatHex","rgb_formatHex8","rgb_formatRgb","hex","h","s","Hsl","min","max","hsl","m2","m1","hsl2rgb","clamph","clampt","vertexShaderText","fragmentShaderText","createShader","gl","type","text","shader","getShaders","vertexShader","fragmentShader","createProgram","shaders","shaderProgram","createBufferAndLocation","program","name","location","buffer","populateBuffer","locationAndBuffer","contents","RectanglesWebGL","canvas","layout","mouseDetection","w","depths","vertices","y","depth","xr","yt","coords","indices","selectionStates","colour","id","FastRectangles","transitionDuration","main","useRef","mouseDetectionCanvas","rectanglesWebGL","mouseDetectionWebGL","useEffect","canvasWidth","canvasHeight","_jsx","_Fragment","_jsxs","rect","e","FastRectangles$1"],"mappings":"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"}